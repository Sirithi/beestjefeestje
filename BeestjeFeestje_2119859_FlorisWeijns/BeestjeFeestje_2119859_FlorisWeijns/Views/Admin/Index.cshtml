@using BeestjeFeestje.Data.Entities
@model BeestjeFeestje_2119859_FlorisWeijns.ViewModels.AdminViewModel
@inject Microsoft.AspNetCore.Identity.UserManager<User> UserManager

@{
    ViewData["Title"] = "User Management";
}

<h2>User Management</h2>

@if (User.IsInRole("Admin") || User.IsInRole("Owner"))
{
    <div class="d-flex">
        <p>
            <a asp-action="CreateRole" class="btn btn-primary">Create New Role</a>
        </p>
        <p>
            <a asp-action="CreateUser" class="btn btn-primary">Create New User</a>
        </p>
    </div>
    

    <table class="table">
        <thead>
            <tr>
                <th>Email</th>
                <th>Roles</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>@user.Email</td>
                    <td>@string.Join(", ", await UserManager.GetRolesAsync(user))</td>
                    <td>
                        <a asp-action="ManageRoles" asp-route-userId="@user.Id" class="btn btn-primary">Manage Roles</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>You do not have permission to view this page.</p>
}
